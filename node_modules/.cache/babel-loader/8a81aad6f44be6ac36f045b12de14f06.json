{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anabi\\\\OneDrive\\\\Documentos\\\\Projetos\\\\clarke-challenge\\\\front-end\\\\src\\\\paginas\\\\login\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useStyles } from \"../../estilos/backdrop\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as ContaLuz } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/contaluz.svg\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport { UseAuth } from \"../../contexto/AuthContext\";\nimport Logo from \"../../componentes/logo\";\nimport InputSenha from \"../../componentes/inputSenha\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [senhaLogin, setSenhaLogin] = useState(\"\");\n  const [lembrarUsuario, setLembrarUsuario] = useState(false);\n  const {\n    setGravarUsuario,\n    setUsuario,\n    usuario,\n    carregando,\n    setCarregando\n  } = UseAuth();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  useEffect(() => {\n    var _errors$email, _errors$senha;\n\n    if (((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" || ((_errors$senha = errors.senha) === null || _errors$senha === void 0 ? void 0 : _errors$senha.type) === \"required\") {\n      toast.error(\"Digite email e senha\");\n    }\n  }, [errors.email, errors.senha]);\n\n  async function onSubmit(data) {\n    setCarregando(true);\n    const body = JSON.stringify(data);\n\n    try {\n      const response = await fetch(\"http://localhost:3300/login\", {\n        method: \"POST\",\n        headers: {\n          accept: \"application/json\",\n          \"content-type\": \"application/json\"\n        },\n        body\n      });\n      const login = await response.json();\n\n      if (response.status !== 200) {\n        toast.error(login);\n      } else {\n        setUsuario(login);\n\n        if (lembrarUsuario) {\n          setGravarUsuario(login);\n        }\n\n        toast.success(`OlÃ¡, ${login.usuario.nome}`, {\n          onClose: () => {\n            history.push(\"/\");\n          }\n        });\n      }\n    } catch (error) {\n      toast.error(error.message);\n    } finally {\n      setCarregando(false);\n    }\n  }\n\n  console.log(lembrarUsuario);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-form-login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conta-luz\",\n        children: /*#__PURE__*/_jsxDEV(ContaLuz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-login\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-blue\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/cadastro\",\n            children: \"Cadastre-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-blue\",\n              htmlFor: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              placeholder: \"Digite seu e-mail\",\n              ...register(\"email\", {\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputSenha, {\n            label: \"Senha\",\n            name: \"senha\",\n            placeholder: \"Digite sua senha\",\n            value: senhaLogin,\n            setValue: setSenhaLogin,\n            ...register(\"senha\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"bt-primario\",\n            type: \"submit\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-lg flex-row item-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: \"lembrar-me\",\n              name: \"lembrarUsuario\",\n              checked: lembrarUsuario,\n              onChange: () => setLembrarUsuario(!lembrarUsuario)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-blue\",\n              htmlfor: \"lembrar-me\",\n              children: \"Lembrar-me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: classes.backdrop,\n      open: carregando,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"GSeFzO6SZMH6wWsPug+9jOjXuOQ=\", false, function () {\n  return [useHistory, useStyles, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/anabi/OneDrive/Documentos/Projetos/clarke-challenge/front-end/src/paginas/login/index.js"],"names":["useStyles","Backdrop","CircularProgress","useState","useEffect","Link","useHistory","toast","useForm","UseAuth","Logo","InputSenha","Login","senhaLogin","setSenhaLogin","lembrarUsuario","setLembrarUsuario","setGravarUsuario","setUsuario","usuario","carregando","setCarregando","history","classes","register","handleSubmit","formState","errors","email","type","senha","error","onSubmit","data","body","JSON","stringify","response","fetch","method","headers","accept","login","json","status","success","nome","onClose","push","message","console","log","required","backdrop"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport { useStyles } from \"../../estilos/backdrop\";\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { ReactComponent as ContaLuz } from \"../../assets/contaluz.svg\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { UseAuth } from \"../../contexto/AuthContext\";\r\nimport Logo from \"../../componentes/logo\";\r\nimport InputSenha from \"../../componentes/inputSenha\";\r\n\r\nexport default function Login() {\r\n  const [senhaLogin, setSenhaLogin] = useState(\"\");\r\n  const [lembrarUsuario, setLembrarUsuario] = useState(false);\r\n  const { setGravarUsuario, setUsuario, usuario, carregando, setCarregando } =\r\n    UseAuth();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (\r\n      errors.email?.type === \"required\" ||\r\n      errors.senha?.type === \"required\"\r\n    ) {\r\n      toast.error(\"Digite email e senha\");\r\n    }\r\n  }, [errors.email, errors.senha]);\r\n\r\n  async function onSubmit(data) {\r\n    setCarregando(true);\r\n    const body = JSON.stringify(data);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3300/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          accept: \"application/json\",\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body,\r\n      });\r\n\r\n      const login = await response.json();\r\n\r\n      if (response.status !== 200) {\r\n        toast.error(login);\r\n      } else {\r\n        setUsuario(login);\r\n        if (lembrarUsuario) {\r\n          setGravarUsuario(login);\r\n        }\r\n        toast.success(`OlÃ¡, ${login.usuario.nome}`, {\r\n          onClose: () => {\r\n            history.push(\"/\");\r\n          },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setCarregando(false);\r\n    }\r\n  }\r\n  console.log(lembrarUsuario);\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <div className=\"container-form-login\">\r\n        <div className=\"conta-luz\">\r\n          <ContaLuz />\r\n        </div>\r\n        <form className=\"form form-login\" onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"text-center mb-lg\">\r\n            <h1 className=\"text-blue\">Entrar</h1>\r\n            <Link to=\"/cadastro\">Cadastre-se</Link>\r\n          </div>\r\n          <div>\r\n            <div className=\"flex-column\">\r\n              <label className=\"text-blue\" htmlFor=\"email\">\r\n                E-mail\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"email\"\r\n                placeholder=\"Digite seu e-mail\"\r\n                {...register(\"email\", { required: true })}\r\n              ></input>\r\n            </div>\r\n            <InputSenha\r\n              label=\"Senha\"\r\n              name=\"senha\"\r\n              placeholder=\"Digite sua senha\"\r\n              value={senhaLogin}\r\n              setValue={setSenhaLogin}\r\n              {...register(\"senha\", { required: true })}\r\n            />\r\n            <button className=\"bt-primario\" type=\"submit\">\r\n              Enviar\r\n            </button>\r\n            <div className=\"mt-lg flex-row item-center\">\r\n              <input\r\n                type=\"checkbox\"\r\n                value=\"lembrar-me\"\r\n                name=\"lembrarUsuario\"\r\n                checked={lembrarUsuario}\r\n                onChange={() => setLembrarUsuario(!lembrarUsuario)}\r\n              />\r\n              <label className=\"text-blue\" htmlfor=\"lembrar-me\">\r\n                Lembrar-me\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Backdrop className={classes.backdrop} open={carregando}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}