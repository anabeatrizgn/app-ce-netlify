{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anabi\\\\OneDrive\\\\Documentos\\\\Projetos\\\\ce-netlify\\\\front-end\\\\src\\\\paginas\\\\cadastro\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport \"./styles.css\";\nimport { useStyles } from \"../../estilos/backdrop\";\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useForm } from \"react-hook-form\";\nimport { UseFetch } from \"../../contexto/regra-negocio\";\nimport CidadePorCep from \"../../servicos/viacep\";\nimport InputSenha from \"../../componentes/inputSenha\";\nimport Logo from \"../../componentes/logo\";\nimport BotaoPrimario from \"../../componentes/botao\";\nimport Input from \"../../componentes/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Cadastro() {\n  _s();\n\n  const {\n    handleCadastro,\n    carregando\n  } = UseFetch();\n  const [cep, setCep] = useState(\"\");\n  const [cidade, setCidade] = useState(\"\");\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  async function handlePreencherCidade(meuCep) {\n    const cidade = await CidadePorCep(meuCep);\n\n    if (!cidade) {\n      toast.error(\"Falha ao encontrar cidade\");\n      return;\n    }\n\n    setCidade(cidade);\n  }\n\n  useEffect(() => {\n    if (cep.length < 9 && cidade.length > 0) {\n      setCidade(\"\");\n    }\n\n    if (cep.indexOf(\"-\") !== -1) {\n      if (cep.length === 9) {\n        handlePreencherCidade(cep);\n      }\n\n      return;\n    }\n\n    if (cep.length === 8) {\n      handlePreencherCidade(cep);\n    }\n  }, [cep, cidade.length]);\n  useEffect(() => {\n    var _errors$email, _errors$nome, _errors$cep, _errors$cidade, _errors$senha, _errors$confirmar_sen;\n\n    if (((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.type) === \"required\" || ((_errors$nome = errors.nome) === null || _errors$nome === void 0 ? void 0 : _errors$nome.type) === \"required\" || ((_errors$cep = errors.cep) === null || _errors$cep === void 0 ? void 0 : _errors$cep.type) === \"required\" || ((_errors$cidade = errors.cidade) === null || _errors$cidade === void 0 ? void 0 : _errors$cidade.type) === \"required\" || ((_errors$senha = errors.senha) === null || _errors$senha === void 0 ? void 0 : _errors$senha.type) === \"required\" || ((_errors$confirmar_sen = errors.confirmar_senha) === null || _errors$confirmar_sen === void 0 ? void 0 : _errors$confirmar_sen.type) === \"required\") {\n      toast.error(\"Todos os campos são obrigatórios\");\n    }\n  }, [errors.email, errors.senha, errors.nome, errors.cep, errors.cidade, errors.confirmar_senha]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form form-cadastro\",\n        onSubmit: handleSubmit(handleCadastro),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mb-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-blue h1resp\",\n            children: \"Cadastre-se\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            label: \"Nome\",\n            name: \"nome\",\n            id: \"nome\",\n            htmlFor: \"nome\",\n            placeholder: \"Digite seu nome\",\n            ...register(\"nome\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            label: \"E-mail\",\n            name: \"email\",\n            id: \"email\",\n            htmlFor: \"email\",\n            placeholder: \"Digite sua email\",\n            ...register(\"email\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-blue\",\n              children: \"CEP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Digite seu cep\",\n              type: \"text\",\n              ...register(\"cep\", {\n                required: true\n              }),\n              value: cep,\n              maxLenght: 9,\n              onChange: e => setCep(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-blue\",\n              children: \"Cidade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Digite seu cidade\",\n              ...register(\"cidade\", {\n                required: true\n              }),\n              type: \"text\",\n              value: cidade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(InputSenha, {\n            label: \"Senha\",\n            placeholder: \"Digite sua senha\",\n            value: senhaCadastro,\n            setValue: setSenhaCadastro,\n            ...register(\"senha\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputSenha, {\n            label: \"Confirme sua senha\",\n            placeholder: \"Digite sua senha novamente\",\n            value: confirmarSenha,\n            setValue: setConfirmarSenha,\n            ...register(\"confirmar_senha\", {\n              required: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row content-center item-center mb-lg\",\n          children: /*#__PURE__*/_jsxDEV(BotaoPrimario, {\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      className: classes.backdrop,\n      open: carregando,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Cadastro, \"EjvezMK1AuqRuXbh65dV1iS5+b4=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Cadastro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cadastro\");","map":{"version":3,"sources":["C:/Users/anabi/OneDrive/Documentos/Projetos/ce-netlify/front-end/src/paginas/cadastro/index.js"],"names":["useStyles","Backdrop","CircularProgress","Link","useEffect","useState","toast","useForm","UseFetch","CidadePorCep","InputSenha","Logo","BotaoPrimario","Input","Cadastro","handleCadastro","carregando","cep","setCep","cidade","setCidade","senhaCadastro","setSenhaCadastro","confirmarSenha","setConfirmarSenha","classes","register","handleSubmit","formState","errors","handlePreencherCidade","meuCep","error","length","indexOf","email","type","nome","senha","confirmar_senha","required","e","target","value","backdrop"],"mappings":"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","sourcesContent":["import \"./styles.css\";\r\nimport { useStyles } from \"../../estilos/backdrop\";\r\nimport { Backdrop, CircularProgress } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { UseFetch } from \"../../contexto/regra-negocio\";\r\nimport CidadePorCep from \"../../servicos/viacep\";\r\nimport InputSenha from \"../../componentes/inputSenha\";\r\nimport Logo from \"../../componentes/logo\";\r\nimport BotaoPrimario from \"../../componentes/botao\";\r\nimport Input from \"../../componentes/input\";\r\n\r\nexport default function Cadastro() {\r\n  const { handleCadastro, carregando } = UseFetch();\r\n  const [cep, setCep] = useState(\"\");\r\n  const [cidade, setCidade] = useState(\"\");\r\n  const [senhaCadastro, setSenhaCadastro] = useState(\"\");\r\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\r\n  const classes = useStyles();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  async function handlePreencherCidade(meuCep) {\r\n    const cidade = await CidadePorCep(meuCep);\r\n\r\n    if (!cidade) {\r\n      toast.error(\"Falha ao encontrar cidade\");\r\n      return;\r\n    }\r\n    setCidade(cidade);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (cep.length < 9 && cidade.length > 0) {\r\n      setCidade(\"\");\r\n    }\r\n\r\n    if (cep.indexOf(\"-\") !== -1) {\r\n      if (cep.length === 9) {\r\n        handlePreencherCidade(cep);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (cep.length === 8) {\r\n      handlePreencherCidade(cep);\r\n    }\r\n  }, [cep, cidade.length]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      errors.email?.type === \"required\" ||\r\n      errors.nome?.type === \"required\" ||\r\n      errors.cep?.type === \"required\" ||\r\n      errors.cidade?.type === \"required\" ||\r\n      errors.senha?.type === \"required\" ||\r\n      errors.confirmar_senha?.type === \"required\"\r\n    ) {\r\n      toast.error(\"Todos os campos são obrigatórios\");\r\n    }\r\n  }, [\r\n    errors.email,\r\n    errors.senha,\r\n    errors.nome,\r\n    errors.cep,\r\n    errors.cidade,\r\n    errors.confirmar_senha,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <div className=\"container-form\">\r\n        <form\r\n          className=\"form form-cadastro\"\r\n          onSubmit={handleSubmit(handleCadastro)}\r\n        >\r\n          <div className=\"text-center mb-lg\">\r\n            <h1 className=\"text-blue h1resp\">Cadastre-se</h1>\r\n            <Link to=\"/login\">Entrar</Link>\r\n          </div>\r\n          <div className=\"body-cadastro\">\r\n            <Input\r\n              label=\"Nome\"\r\n              name=\"nome\"\r\n              id=\"nome\"\r\n              htmlFor=\"nome\"\r\n              placeholder=\"Digite seu nome\"\r\n              {...register(\"nome\", { required: true })}\r\n            />\r\n            <Input\r\n              label=\"E-mail\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              htmlFor=\"email\"\r\n              placeholder=\"Digite sua email\"\r\n              {...register(\"email\", { required: true })}\r\n            />\r\n          </div>\r\n          <div className=\"body-cadastro\">\r\n            <div className=\"flex-column\">\r\n              <label className=\"text-blue\">CEP</label>\r\n              <input\r\n                placeholder=\"Digite seu cep\"\r\n                type=\"text\"\r\n                {...register(\"cep\", { required: true })}\r\n                value={cep}\r\n                maxLenght={9}\r\n                onChange={(e) => setCep(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"flex-column\">\r\n              <label className=\"text-blue\">Cidade</label>\r\n              <input\r\n                placeholder=\"Digite seu cidade\"\r\n                {...register(\"cidade\", { required: true })}\r\n                type=\"text\"\r\n                value={cidade}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"body-cadastro\">\r\n            <InputSenha\r\n              label=\"Senha\"\r\n              placeholder=\"Digite sua senha\"\r\n              value={senhaCadastro}\r\n              setValue={setSenhaCadastro}\r\n              {...register(\"senha\", { required: true })}\r\n            />\r\n            <InputSenha\r\n              label=\"Confirme sua senha\"\r\n              placeholder=\"Digite sua senha novamente\"\r\n              value={confirmarSenha}\r\n              setValue={setConfirmarSenha}\r\n              {...register(\"confirmar_senha\", { required: true })}\r\n            />\r\n          </div>\r\n          <div className=\"flex-row content-center item-center mb-lg\">\r\n            <BotaoPrimario>Enviar</BotaoPrimario>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <Backdrop className={classes.backdrop} open={carregando}>\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}